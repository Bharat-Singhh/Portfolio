pipeline {
    agent any // Run on any available agent

    triggers {
        pollSCM('* * * * *') // Adjust polling frequency as needed
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo "Cloning the repository..."
                git branch: 'main', url: 'https://github.com/Bharat-Singhh/Portfolio.git' // Replace with your repository URL
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image..."
                script {
                    sh 'docker build -t india0/portfolio-site:latest .'
                }
            }
        }

        stage('Run and Test Application') {
            steps {
                script {
                    echo "Starting the application container..."
                    try {
                        // Run the container
                        sh '''
                        docker run -d --name portfolio-test-container -p 8080:80 india0/portfolio-site:latest
                        '''

                        // Wait for the application to initialize
                        echo "Waiting for the application to start..."
                        sleep(15)

                        // Test the application
                        echo "Testing the application..."
                        sh '''
                        curl -f http://localhost:8080
                        echo "✅ Application test successful!"
                        '''
                    } catch (Exception e) {
                        error "❌ Application test failed! Check the logs for details."
                    } finally {
                        // Stop and remove the container after testing
                        echo "Stopping and cleaning up the test container..."
                        sh '''
                        docker stop portfolio-test-container || true
                        docker rm portfolio-test-container || true
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up Docker resources..."
            sh '''
            docker system prune -f --filter "until=24h"
            '''
            cleanWs()
        }
        success {
            echo "✅ Pipeline completed successfully!"
        }
        failure {
            echo "❌ Pipeline failed. Check the logs for details."
        }
    }
}
